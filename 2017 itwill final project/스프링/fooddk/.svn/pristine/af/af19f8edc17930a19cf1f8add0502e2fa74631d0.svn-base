package fooddk.controller.tasty;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import fooddk.domain.Tasty;
import fooddk.service.tasty.TastyService;

@Controller
public class TastyWriteController {
	
	@Autowired
	private TastyService tastyService;
	
	@RequestMapping(value="/TastyWriteAction")
	public String tastyWriteAction(@ModelAttribute Tasty tasty, @RequestParam MultipartFile file,HttpServletRequest req){
		if(!file.isEmpty()){
			try {
				String rootPath =  req.getSession().getServletContext().getRealPath("/assets/images/uploadfile");
				File dir = new File(rootPath);
				if(!dir.exists()) dir.mkdirs();
				File serverFile = new File(dir.getAbsolutePath() + File.separator + file.getOriginalFilename());
				byte[] bytes = file.getBytes();
				BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(serverFile));
				bos.write(bytes);
				bos.close();
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		tasty.setT_img(file.getOriginalFilename());
		
		tastyService.insert(tasty);
		return "forward:TastyList";
	}
	
	@RequestMapping(value="/TastyWrite")
	public String tastyWriteForm(){
		return "TastyWriteForm_1";
	}
}
